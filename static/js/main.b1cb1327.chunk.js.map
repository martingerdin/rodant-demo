{"version":3,"sources":["components/Autocomplete.js","functions/icd10.js","components/FieldEditor.js","functions/validation.js","components/ValidationViewer.js","components/RecordEditor.js","functions/csv.js","functions/download.js","components/Spinner.js","components/ButtonContainer.js","components/SearchRecords.js","components/RecordsContainer.js","components/Pager.js","components/SortContainer.js","components/Hooks/useLocalStorage.js","components/RecordPicker.js","components/Nav.tsx","components/Hooks/useDarkMode.js","App.js","serviceWorker.js","functions/codebook.js","index.js"],"names":["Autocomplete","props","inputRef","React","createRef","resultsRef","selectedRef","state","selected","matches","this","current","scrollIntoView","block","e","key","setState","Math","max","preventDefault","min","maxResults","length","code","target","value","onChange","trim","toUpperCase","search","onFocus","onBlur","index","results","slice","map","d","i","ref","className","filter","Boolean","join","onMouseDown","onClickRow","type","placeholder","onKeyDown","Component","a","allowed","database","codes","Object","keys","startsWith","some","toString","indexOf","getList","str","match","replace","FieldEditor","record","data","name","showDescriptions","prevProps","desiredValue","unknown","validation","valid","input","unlabeled","label","show_valid_values","valid_values","value_labels","values","labels","push","allowRadios","l","id","disabled","checked","changeValueRadio","changeValueSelect","changeValueText","v","searchICD10","split","substr","helpButton","showHelp","onClick","toggleDescriptions","getFieldClass","console","log","description","coding_description","validate","field","parseInt","range","parseFloat","validateQuantitative","validateQualitative","undefined","validValue","test","moment","isValid","validateDate","validateDateTime","tok","h","m","validateTime","validateText","validateICD10","interpolateRecord","fields","context","calculated","expr","thisVars","equation","func","Function","bind","defineProperty","get","validateRecord","result","fieldsByName","assign","entries","logicErrors","logicWarnings","logic_checks","checks","checkLogic","logicPrompts","JSON","parse","logic_prompts","mustBeTrue","logic_must_be_true","find","hasUnknownDependency","checkUnknownDependencies","ignoreValidation","includes","hasOtherValidDependency","checkOtherValidDependency","Set","errors","warnings","isUnknown","incomplete","findVarRegex","text","member","dependencies","c","vars","validationResult","every","ValidationViewer","codebook","groups","_","groupBy","ui","g","document","getElementById","focus","RecordEditorState","RecordEditor","cbo","doubleEntry","disableExitShield","db","records","where","equals","Number","uid","first","toArray","pids","pid","referenceRecord","double_enter","forEach","config","id_field","modify","updatePIDs","fe","focusedField","history","locked","group","doubleEntryErrors","delete","saveAndExit","tempLockedValue","returnLockedValueAsBoolean","prompt","message","nextLocation","visible","fieldGroups","k","group2","fieldGroupElements","f","onFocusFieldEditor","onBlurFieldEditor","isFocused","validateFieldGroup","showFinalize","cr","fieldHelp","formatValid","dangerouslySetInnerHTML","__html","coding_instructions","finalizeEntry","to","checkEntry","checkDoubleEntry","finalizeDoubleEntry","idField","titleText","handleClose","markFieldsUnknown","exitWithoutSaving","unlockRecord","changeRadios","withRouter","serializeField","exportCSV","Promise","resolve","headers","row","issues","reduce","b","importCSV","promise","reject","csvParse","delimiter","err","rs","splice","r","clear","bulkPut","put","filename","prefix","blob","Blob","encoded","URL","createObjectURL","element","createElement","setAttribute","click","Spinner","ButtonContainer","createRecord","cleanUpInvalidRecords","exportAndDownloadCSV","isLoading","setLoading","updateRecords","importCSVText","alert","importCsvFile","window","confirm","fileReader","FileReader","addEventListener","srcElement","readAsText","extensions","maxSize","handleCsvImport","onError","SearchRecords","changeSearchText","onSearchFieldChanged","clearSearchText","searchField","default","RecordsContainer","filteredRecords","page","pageSize","searchHits","deleteRecord","sortField","issueDisplay","toLowerCase","fieldName","getFieldText","Pager","clampValue","useState","setPage","updatePage","onPageChange","newPage","isNaN","pageTextChanged","setSelectionRange","SortContainer","onSortFieldChanged","onSortOrderChanged","statePage","sortOrder","exactMatch","includeUnknown","includeLocked","onIncludeUnknownChanged","onIncludeLockedChanged","onExactMatchChanged","pageCount","ceil","htmlFor","useLocalStorage","initialValue","localStorage","getItem","error","sortLocalStorageValue","setSortLocalStorageValue","setValue","useCallback","valueToStore","setItem","stringify","Error","useEffect","page_size","localStorageValue","setLocalStorageValue","useReducer","sortState","action","payload","dispatch","setIsLoading","filteredRecordsState","setFilteredRecordsState","searchResults","setSearchResults","getCodeBookValue","add","recordId","setTimeout","then","exportCSVResults","download","table","catch","silent","toDelete","anyOf","interpolatedRaw","interpolated","hit","hits","hasOwnProperty","sort","sortFieldType","filterAndSortRecords","Nav","version","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","querySelector","querySelectorAll","localTheme","matchMedia","toggleTheme","useDarkMode","ThemeButton","style","paddingLeft","href","App","basename","process","packagejson","path","exact","component","params","double-entry","isLocalhost","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","getDirectDeps","visited","mentioned","getDepsRecursive","directDependencies","dep","csvToCodebook","csv","columns","o","j","origin","fetch","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","configRequest","json","csvString","items","dexie","desc","store","stores","ReactDOM","render","bootstrap"],"mappings":"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","file":"static/js/main.b1cb1327.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Autocomplete.css'\r\n\r\n/**\r\n * Shows an input-element with autocomplete dropdown when typing.\r\n * @prop {async function(search):[[key, value], ...]} search Called when typing\r\n */\r\nclass Autocomplete extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.inputRef = React.createRef()\r\n\t\tthis.resultsRef = React.createRef()\r\n\t\tthis.selectedRef = React.createRef()\r\n\r\n\t\tthis.state = {\r\n\t\t\tselected: -1,\r\n\t\t\tmatches: [],\r\n\t\t}\r\n\t}\r\n\r\n\tget maxResults() {\r\n\t\treturn this.props.maxResults || 30\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\t// Scroll to selected\r\n\t\tif (this.selectedRef.current)\r\n\t\t\tthis.selectedRef.current.scrollIntoView({\r\n\t\t\t\tblock: 'nearest',\r\n\t\t\t})\r\n\t}\r\n\r\n\tonKeyDown(e) {\r\n\t\t// Move up\r\n\t\tif (e.key === 'ArrowUp') {\r\n\t\t\tthis.setState({ selected: Math.max(0, this.state.selected - 1) })\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\r\n\t\t// Move down\r\n\t\tif (e.key === 'ArrowDown') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tselected: Math.min(\r\n\t\t\t\t\tMath.min(this.maxResults, this.state.matches.length) - 1,\r\n\t\t\t\t\tthis.state.selected + 1\r\n\t\t\t\t),\r\n\t\t\t})\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\r\n\t\t// Close\r\n\t\tif (e.key === 'Escape') {\r\n\t\t\tthis.setState({ matches: [] })\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\r\n\t\t// Apply\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\tlet selected = this.state.matches[this.state.selected]\r\n\t\t\tif (!selected) return\r\n\r\n\t\t\tlet code = selected[0]\r\n\t\t\tif (!code) return\r\n\r\n\t\t\te.target.value = code\r\n\r\n\t\t\tif (this.props.onChange) this.props.onChange(e, code)\r\n\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t}\r\n\r\n\tasync onChange(e) {\r\n\t\t// Something changed, fetch value from input\r\n\t\tlet code = this.inputRef.current.value.trim().toUpperCase()\r\n\r\n\t\tif (this.props.onChange) this.props.onChange(e)\r\n\r\n\t\t// Do search\r\n\t\tlet matches = await this.props.search(code)\r\n\t\tthis.setState({\r\n\t\t\tmatches: matches,\r\n\t\t\tselected: Math.min(\r\n\t\t\t\tthis.state.selected,\r\n\t\t\t\tMath.min(matches.length - 1, this.maxResults)\r\n\t\t\t),\r\n\t\t})\r\n\t}\r\n\r\n\tasync onFocus(e) {\r\n\t\tif (this.props.onFocus) this.props.onFocus(e)\r\n\r\n\t\tlet matches = await this.props.search(this.props.value)\r\n\t\tthis.setState({ matches: matches })\r\n\t}\r\n\r\n\tasync onBlur(e) {\r\n\t\tif (this.props.onBlur) this.props.onBlur(e)\r\n\r\n\t\tthis.setState({ matches: [] })\r\n\t}\r\n\r\n\tasync onClickRow(e, code, index) {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\tselected: index,\r\n\t\t})\r\n\r\n\t\tif (this.props.onChange) this.props.onChange(null, code)\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Format search results\r\n\t\tlet results = this.state.matches.slice(0, this.maxResults).map((d, i) => (\r\n\t\t\t<div\r\n\t\t\t\tref={i === this.state.selected ? this.selectedRef : null}\r\n\t\t\t\tclassName={['row', i === this.state.selected ? 'selected' : '']\r\n\t\t\t\t\t.filter(Boolean)\r\n\t\t\t\t\t.join(' ')}\r\n\t\t\t\tkey={d[0]}\r\n\t\t\t\tonMouseDown={e => this.onClickRow(e, d[0], i)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"code\">{d[0]}</div>\r\n\t\t\t\t<div className=\"description\">{d[1]}</div>\r\n\t\t\t</div>\r\n\t\t))\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"autocomplete\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={this.inputRef}\r\n\t\t\t\t\tclassName=\"input is-small\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={this.props.value}\r\n\t\t\t\t\tplaceholder={this.props.placeholder}\r\n\t\t\t\t\tonKeyDown={e => this.onKeyDown(e)}\r\n\t\t\t\t\tonChange={e => this.onChange(e)}\r\n\t\t\t\t\tonFocus={e => this.onFocus(e)}\r\n\t\t\t\t\tonBlur={e => this.onBlur(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t{results.length > 0 && (\r\n\t\t\t\t\t<div className=\"results\" ref={this.resultsRef}>\r\n\t\t\t\t\t\t{results}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Autocomplete\r\n","async function search(code, allowed = []) {\r\n\tif (code.length < 1) return []\r\n\r\n\tcode = code.toUpperCase()\r\n\r\n\tlet database = await import('../data/icd10.json')\r\n\r\n\t// Try codes first...\r\n\tlet codes = Object.keys(database)\r\n\t\t.filter(\r\n\t\t\td =>\r\n\t\t\t\td.startsWith(code) &&\r\n\t\t\t\t(allowed.length === 0 || allowed.some(d => d.startsWith(code)))\r\n\t\t)\r\n\t\t.map(d => [d, database[d]])\r\n\r\n\tif (codes.length > 0) return codes\r\n\r\n\t// ...otherwise do slow full text search\r\n\tif (code.length < 3) return []\r\n\r\n\treturn Object.keys(database)\r\n\t\t.filter(\r\n\t\t\td =>\r\n\t\t\t\tdatabase[d] &&\r\n\t\t\t\tdatabase[d]\r\n\t\t\t\t\t.toString()\r\n\t\t\t\t\t.toUpperCase()\r\n\t\t\t\t\t.indexOf(code) !== -1\r\n\t\t)\r\n\t\t.map(d => [d, database[d]])\r\n}\r\n\r\nexport default search\r\n","import React from 'react'\r\nimport Autocomplete from './Autocomplete'\r\nimport searchICD10 from '../functions/icd10'\r\n\r\nfunction getList(str) {\r\n\treturn str\r\n\t\t.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/g)\r\n\t\t.map(d => d.replace(/\"/g, ''))\r\n}\r\n\r\n/**\r\n * Edits a Single field in a Record.\r\n * Render style depends on the type of Field.\r\n * Signals changes throught an onChanged prop callback.\r\n */\r\n\r\nclass FieldEditor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\trecord: this.props.record,\r\n\t\t\tvalue: (this.props.record[this.props.data.name] || '').toString(),\r\n\t\t\tshowDescriptions: false,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\t// Update\r\n\t\tlet desiredValue = (\r\n\t\t\tthis.props.record[this.props.data.name] || ''\r\n\t\t).toString()\r\n\r\n\t\tif (this.state.value !== desiredValue && this.state.value === '')\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalue: desiredValue,\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync changeValueText(e) {\r\n\t\tif (this.props.onChange)\r\n\t\t\tthis.props.onChange(this.props.data, e.target.value)\r\n\r\n\t\tthis.setState({\r\n\t\t\tvalue: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tasync changeValueSelect(e) {\r\n\t\tif (this.props.onChange)\r\n\t\t\tthis.props.onChange(this.props.data, e.target.value)\r\n\r\n\t\tthis.setState({\r\n\t\t\tvalue: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tasync changeValueRadio(i) {\r\n\t\tif (this.props.onChange) this.props.onChange(this.props.data, i)\r\n\r\n\t\tthis.setState({\r\n\t\t\tvalue: i,\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleDescriptions(e) {\r\n\t\tthis.setState({\r\n\t\t\tshowDescriptions: !this.state.showDescriptions,\r\n\t\t})\r\n\t}\r\n\r\n\tgetFieldClass() {\r\n\t\tif (this.state.value === this.props.data.unknown) return 'default_value'\r\n\r\n\t\tif (this.props.validation.valid) return 'valid'\r\n\r\n\t\treturn 'invalid'\r\n\t}\r\n\r\n\tonFocus() {\r\n\t\tif (this.props.onFocus) this.props.onFocus(this)\r\n\t}\r\n\r\n\tonBlur() {\r\n\t\tif (this.props.onBlur) this.props.onBlur(this)\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet d = this.props.data\r\n\t\tlet input = null\r\n\t\tlet unlabeled = this.props.unlabeled === true\r\n\r\n\t\tlet label = unlabeled ? null : <label className=\"label\">{d.label}</label>\r\n\r\n\t\tif (\r\n\t\t\td.type === 'qualitative' &&\r\n\t\t\td.show_valid_values === 'yes' &&\r\n\t\t\td.valid_values !== '' &&\r\n\t\t\td.value_labels !== ''\r\n\t\t) {\r\n\t\t\tlet values = getList(d.valid_values)\r\n\t\t\tlet labels = getList(d.value_labels)\r\n\r\n\t\t\t// Add unknown to values and labels if missing and not empty\r\n\t\t\tif (d.unknown !== '' && values.indexOf(d.unknown.toString()) === -1) {\r\n\t\t\t\tvalues.push(d.unknown)\r\n\t\t\t\tlabels.push('Unknown')\r\n\t\t\t}\r\n\r\n\t\t\tif (this.props.allowRadios && values.length <= 6) {\r\n\t\t\t\t// Render radio buttons\r\n\t\t\t\tinput = (\r\n\t\t\t\t\t<div className=\"control radios\">\r\n\t\t\t\t\t\t{labels.map((l, i) => (\r\n\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t'radio' +\r\n\t\t\t\t\t\t\t\t\t(this.state.value === values[i].toString() ? ' selected' : '')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tkey={values[i]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid={`field_${d.name}`}\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\t\t\t\t\tonFocus={e => this.onFocus()}\r\n\t\t\t\t\t\t\t\t\tonBlur={e => this.onBlur()}\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.value === values[i].toString()}\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.changeValueRadio(values[i].toString())}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{l}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\t// Render drop-down/select\r\n\t\t\t\tinput = (\r\n\t\t\t\t\t<div className=\"select is-small is-light\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tid={`field_${d.name}`}\r\n\t\t\t\t\t\t\tplaceholder={unlabeled ? d.label : ''}\r\n\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\tdisabled={this.props.disabled || d.input !== 'yes'}\r\n\t\t\t\t\t\t\tonChange={e => this.changeValueSelect(e)}\r\n\t\t\t\t\t\t\tonFocus={e => this.onFocus()}\r\n\t\t\t\t\t\t\tonBlur={e => this.onBlur()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option key=\"unset\"></option>\r\n\t\t\t\t\t\t\t{values.map((d, i) => (\r\n\t\t\t\t\t\t\t\t<option key={d} value={d}>\r\n\t\t\t\t\t\t\t\t\t{d}. {labels[i]}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t} else if (d.type === 'quantitative') {\r\n\t\t\t// Render number\r\n\t\t\tinput = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tid={`field_${d.name}`}\r\n\t\t\t\t\tclassName=\"input is-small\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tdisabled={d.input !== 'yes' || this.props.disabled}\r\n\t\t\t\t\tplaceholder={unlabeled ? d.label : ''}\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\tonChange={e => this.changeValueText(e)}\r\n\t\t\t\t\tonFocus={e => this.onFocus()}\r\n\t\t\t\t\tonBlur={e => this.onBlur()}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t} else if (d.type === 'icd10') {\r\n\t\t\t// Render ICD10 Autocomplete\r\n\t\t\tinput = (\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\tdisabled={this.props.disabled}\r\n\t\t\t\t\tplaceholder={unlabeled ? d.label : ''}\r\n\t\t\t\t\tsearch={v => searchICD10(v, d.valid_values.split(','))}\r\n\t\t\t\t\tonChange={(e, v) => {\r\n\t\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\t\tif (this.props.onChange)\r\n\t\t\t\t\t\t\t\tthis.props.onChange(this.props.data, v)\r\n\r\n\t\t\t\t\t\t\tthis.setState({ value: v })\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.changeValueText(e)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={e => this.onFocus()}\r\n\t\t\t\t\tonBlur={e => this.onBlur()}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\t// Qualitative\r\n\t\t\tif (d.name.substr(-3) === 'icd') {\r\n\t\t\t} else {\r\n\t\t\t\t// Render text\r\n\t\t\t\tinput = (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid={`field_${d.name}`}\r\n\t\t\t\t\t\tclassName=\"input is-small\"\r\n\t\t\t\t\t\tdisabled={d.input !== 'yes' || this.props.disabled}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder={unlabeled ? d.label : ''}\r\n\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\tonChange={e => this.changeValueText(e)}\r\n\t\t\t\t\t\tonFocus={e => this.onFocus()}\r\n\t\t\t\t\t\tonBlur={e => this.onBlur()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet helpButton =\r\n\t\t\tthis.props.showHelp === true ? (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button is-small\"\r\n\t\t\t\t\tonClick={() => this.toggleDescriptions()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"fa fa-question\" />\r\n\t\t\t\t</button>\r\n\t\t\t) : null\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={'record_field ' + this.getFieldClass()}\r\n\t\t\t\tonClick={e => console.log(d)}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t\t<div className=\"field has-addons\">\r\n\t\t\t\t\t<div className=\"control\">{input}</div>\r\n\t\t\t\t\t{helpButton}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tthis.state.showDescriptions ? 'descriptions show' : 'descriptions'\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"description\">{d.description}</div>\r\n\t\t\t\t\t<div className=\"coding_description\">{d.coding_description}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default FieldEditor\r\n","import moment from 'moment'\r\n\r\n/**\r\n * Validates a field according to its type.\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validate(value, field) {\r\n\tswitch (field.type) {\r\n\t\tcase 'quantitative':\r\n\t\t\treturn validateQuantitative(value, field)\r\n\t\tcase 'qualitative':\r\n\t\t\treturn validateQualitative(value, field)\r\n\t\tcase 'date':\r\n\t\t\treturn validateDate(value, field)\r\n\t\tcase 'datetime':\r\n\t\t\treturn validateDateTime(value, field)\r\n\t\tcase 'time':\r\n\t\t\treturn validateTime(value, field)\r\n\t\tcase 'text':\r\n\t\t\treturn validateText(value, field)\r\n\t\tcase 'icd10':\r\n\t\t\treturn validateICD10(value, field)\r\n\t\tdefault:\r\n\t\t\t// none\r\n\t\t\treturn []\r\n\t}\r\n}\r\n\r\n/**\r\n * Validates a qualitative value to be within the range\r\n * dictated by the fields valid_values first and second elements.\r\n *\r\n * Assumes 'unknown' if value is equal to field.unknown\r\n *\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateQuantitative(value, field) {\r\n\tif (!field.valid_values) return []\r\n\r\n\tif (\r\n\t\tvalue.toString() === field.unknown ||\r\n\t\tparseInt(value) === parseInt(field.unknown)\r\n\t)\r\n\t\treturn []\r\n\r\n\tif (value.toString() === 'NaN') return ['This field can not be empty']\r\n\r\n\tlet v = parseInt(value)\r\n\tif (v.toString() === 'NaN') return [`Not a number`]\r\n\r\n\tlet range = field.valid_values.split(',').map(d => parseFloat(d))\r\n\r\n\treturn v >= range[0] && v <= range[1]\r\n\t\t? []\r\n\t\t: [`'${value}' is not in range ${range[0]} .. ${range[1]}`]\r\n}\r\n\r\n/**\r\n * Validates a qualitative value to exist within the fields valid_values.\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateQualitative(value, field) {\r\n\tif (!field.valid_values) return []\r\n\r\n\tif (field.unknown !== '' && value.toString() === field.unknown) return []\r\n\r\n\tif (value.toString() === 'NaN') return ['This field can not be empty']\r\n\r\n\treturn field.valid_values.split(',').indexOf(value.toString()) !== -1\r\n\t\t? []\r\n\t\t: [`'${value}' is not a valid value`]\r\n}\r\n\r\n/**\r\n * Validates a date to match YYYY-HH-MM and be a valid date.\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateDate(value, field) {\r\n\tif (value === field.unknown) return []\r\n\r\n\tif (value === undefined || value === '')\r\n\t\treturn [`'${field.label}' can not be empty`]\r\n\r\n\t// Check valid_values\r\n\tfor (let validValue of field.valid_values.split(','))\r\n\t\tif (value === validValue.trim()) return []\r\n\r\n\t// Check format\r\n\tif (!/^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$/.test(value))\r\n\t\treturn [`'${value}' is not in correct format YYYY-MM-DD`]\r\n\r\n\t// Validate date with moment\r\n\treturn moment(value).isValid() ? [] : [`'${value}' is not in a valid date`]\r\n}\r\n\r\n/**\r\n * Validates a date and time to match format YYYY-MM-DD HH:mm and be a valid date.\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateDateTime(value, field) {\r\n\tif (value === field.unknown) return []\r\n\r\n\tif (value === undefined || value === '')\r\n\t\treturn [`'${field.label}' can not be empty`]\r\n\r\n\t// Check format\r\n\tif (\r\n\t\t!/^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]$/.test(\r\n\t\t\tvalue\r\n\t\t)\r\n\t)\r\n\t\treturn [`'${value}' is not in correct format YYYY-MM-DD HH:mm`]\r\n\r\n\t// Validate date and time with moment\r\n\treturn moment(value).isValid()\r\n\t\t? []\r\n\t\t: [`'${value}' is not a valid date or time`]\r\n}\r\n\r\n/**\r\n * Validates a time string to match HH:mm and be in range.\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateTime(value, field) {\r\n\tif (value === field.unknown) return []\r\n\r\n\t// Check valid_values\r\n\tfor (let validValue of field.valid_values.split(','))\r\n\t\tif (value === validValue.trim()) return []\r\n\r\n\t// Check empty\r\n\tif (value === undefined || value === '')\r\n\t\treturn [`'${field.label}' can not be empty`]\r\n\r\n\t// Check format\r\n\tif (!/^[0-9][0-9]:[0-9][0-9]$/.test(value))\r\n\t\treturn [`'${value}' is not in correct format HH:mm`]\r\n\r\n\t// Check ranges\r\n\tlet tok = value.split(':')\r\n\tlet h = parseInt(tok[0])\r\n\tlet m = parseInt(tok[1])\r\n\r\n\treturn h >= 0 && h < 24 && m >= 0 && m < 60\r\n\t\t? []\r\n\t\t: [`'${value}' is not a valid time`]\r\n}\r\n\r\n/**\r\n * Validates a text to be shorter than 1000 characters.\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateText(value, field) {\r\n\tif (value === field.unknown) return []\r\n\r\n\treturn value !== undefined && value.length <= 1000\r\n\t\t? []\r\n\t\t: ['Text too long (< 1000 characters)']\r\n}\r\n/**\r\n * Validates an icd10 code to be one of the valid values\r\n * @returns empty array if no errors, or array with text describing each issue\r\n */\r\nfunction validateICD10(value, field) {\r\n\tif (value === field.unknown) return []\r\n\r\n\treturn value !== undefined &&\r\n\t\tfield.valid_values.split(',').indexOf(value) !== -1\r\n\t\t? []\r\n\t\t: ['Unknown ICD10 code']\r\n}\r\n\r\n/**\r\n * Creates a context object containing properties for calculated fields\r\n * @param {*} record\r\n * @param {*} fields\r\n */\r\nfunction interpolateRecord(record, fields) {\r\n\tlet context = {\r\n\t\tmoment: moment,\r\n\t}\r\n\r\n\t// Apply non calculated fields to context\r\n\tfor (let field of fields) {\r\n\t\tif (field.calculated !== 'yes') {\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'qualitative':\r\n\t\t\t\tcase 'quantitative':\r\n\t\t\t\t\tcontext[field.name] = parseInt(record[field.name])\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'icd10':\r\n\t\t\t\t\tcontext[field.name] = (record[field.name] || '').toString()\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcontext[field.name] = record[field.name]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Setup calculated context\r\n\tfor (let field of fields) {\r\n\t\tif (field.calculated === 'yes') {\r\n\t\t\tlet expr = 'return ' + thisVars(field.equation)\r\n\t\t\tlet func = new Function(expr).bind(context)\r\n\t\t\tObject.defineProperty(context, field.name, {\r\n\t\t\t\tget() {\r\n\t\t\t\t\treturn func()\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn context\r\n}\r\n\r\n/**\r\n * Generates a validation result for a whole record,\r\n * using calculated fields and logic_checks.\r\n * @returns array of validation result for each field\r\n */\r\nfunction validateRecord(record, fields) {\r\n\tlet result = {}\r\n\tlet context = interpolateRecord(record, fields)\r\n\tlet fieldsByName = Object.assign(\r\n\t\t{},\r\n\t\t...[...fields.entries()].map(([k, v]) => ({ [v.name]: v }))\r\n\t)\r\n\r\n\t// Apply calculated context to result and do logic checks\r\n\tfor (let field of fields) {\r\n\t\tlet logicErrors = validate(context[field.name], field) || []\r\n\t\tlet logicWarnings = []\r\n\r\n\t\tif (field.logic_checks) {\r\n\t\t\tlet checks = checkLogic(field, context)\r\n\t\t\tlet logicPrompts = JSON.parse('[' + field.logic_prompts + ']')\r\n\t\t\tlet mustBeTrue = field.logic_must_be_true\r\n\t\t\t\t.split(',')\r\n\t\t\t\t.map(d => d.trim() === 'yes')\r\n\r\n\t\t\tfor (let i in checks) {\r\n\t\t\t\tif (typeof checks[i] === 'string')\r\n\t\t\t\t\tlogicErrors.push(\r\n\t\t\t\t\t\t`'${\r\n\t\t\t\t\t\t\t(fields.find(d => d.name === checks[i]) || {}).label\r\n\t\t\t\t\t\t}' can not be empty`\r\n\t\t\t\t\t)\r\n\t\t\t\telse if (checks[i] && mustBeTrue[i] === true)\r\n\t\t\t\t\tlogicErrors.push(logicPrompts[i])\r\n\t\t\t\telse if (\r\n\t\t\t\t\tchecks[i] &&\r\n\t\t\t\t\t(mustBeTrue[i] === false || mustBeTrue[i] === undefined)\r\n\t\t\t\t)\r\n\t\t\t\t\tlogicWarnings.push(logicPrompts[i])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet hasUnknownDependency = false\r\n\r\n\t\tif (field.logic_checks !== '')\r\n\t\t\thasUnknownDependency = checkUnknownDependencies(\r\n\t\t\t\tfield,\r\n\t\t\t\tcontext\r\n\t\t\t)\r\n\r\n\t\tif (field.calculated === 'yes' && !hasUnknownDependency)\r\n\t\t\thasUnknownDependency = checkUnknownDependencies(\r\n\t\t\t\tfield,\r\n\t\t\t\tcontext\r\n\t\t\t)\r\n\r\n\t\tlet ignoreValidation = false\r\n\t\tif (field.valid_values !== '')\r\n\t\t\tignoreValidation = field.valid_values.split(',').includes(context[field.name])\r\n\t\r\n\t \t// Check if date and time fields include other valid value\r\n\t\tlet hasOtherValidDependency = false\r\n\t\tif (field.logic_checks !== '' && (field.type === \"date\" || field.type === \"time\"  || field.type === \"datetime\"))\r\n\t\t\thasOtherValidDependency |= checkOtherValidDependency(\r\n\t\t\t\tfield,\r\n\t\t\t\t'logic_checks',\r\n\t\t\t\tcontext,\r\n\t\t\t\tfieldsByName\r\n\t\t\t)\r\n\t\t\t\r\n\t\t// Remove duplicate errors\r\n\t\tlogicErrors = [...new Set(logicErrors)]\r\n\r\n\t\t// Define valid\r\n\t\tlet valid = hasUnknownDependency || hasOtherValidDependency || ignoreValidation || logicErrors.length === 0\r\n\r\n\t\t// Clear logic errors if valid    \r\n\t\tif (valid) logicErrors = []    \r\n\t\t\t\t\r\n\t\tresult[field.name] = {\r\n\t\t\tvalue: context[field.name],\r\n\t\t\tvalid: valid,\r\n\t\t\terrors: logicErrors,\r\n\t\t\twarnings: logicWarnings,\r\n\t\t\tunknown:\r\n\t\t\t\thasUnknownDependency || \r\n\t\t\t\tisUnknown(context[field.name], field),\r\n\t\t\tincomplete: !context[field.name] && context[field.name] !== 0,\r\n\t\t\ttype: field.type,\r\n\t\t}\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nlet findVarRegex = /([a-z_]+[0-9]*)/g\r\nfunction thisVars(text) {\r\n\tif (text[0] === '$') return text.substr(1)\r\n\treturn text.replace(findVarRegex, 'this.$1')\r\n}\r\n\r\n/**\r\n * Checks if a field has dependency vars that are valid but not dates or times\r\n */\r\nfunction checkOtherValidDependency(field, member, context, fieldsByName) {\r\n\t\tvar text = field[member]\r\n\t\tif (text === null) return false\r\n\r\n\t\treturn text\r\n\t\t\t.trim()\r\n\t\t\t.match(findVarRegex)\r\n\t\t\t.filter(d => fieldsByName[d].valid_values !== '')\r\n\t\t\t.map(d => fieldsByName[d].valid_values.split(',').includes(context[d]))\r\n\t\t\t.some(d => d === true)\r\n}\r\n\r\n\r\n/**\r\n * Checks if a field has any unknown dependency vars\r\n * Using the full, recursive dependencies array\r\n */\r\nfunction checkUnknownDependencies(field, context) {\r\n\treturn field.dependencies // For all dependency fields...\r\n\t\t.map(d => isUnknown(context[d.name], d)) // ... check if value in context is unknown\r\n\t\t.some(d => d === true) // If any are unknown, return true\r\n}\r\n\r\n/**\r\n * Checks field logic against context\r\n * Returns an array of results from logic checks\r\n * Elements can be true(an error), false(no error) or a string with a field name\r\n * signaling that a dependent value were undefined (an error).\r\n */\r\nfunction checkLogic(field, context) {\r\n\treturn field.logic_checks.split(',').map(c => {\r\n\t\t// If any of the dependent values are _undefined_ test failure\r\n\t\t// If any of the dependent values are _unknown_ test succeeds\r\n\t\tlet vars = c.trim().match(findVarRegex)\r\n\r\n\t\t// Check if a field dependency\r\n\t\tfor (let v of vars)\r\n\t\t\tif (context[v] === undefined || context[v] === '') return v\r\n\t\t\t// Dependent value is _undefined_ so return the undefined field id for error message\r\n\t\t\telse if (context[v].toString() === (field.unknown || 999).toString())\r\n\t\t\t\treturn false // Dependent value is _unknown_ pass test\r\n\r\n\t\t// Run the test\r\n\t\tlet func = new Function('return ' + thisVars(c.trim())).bind(context)()\r\n\t\treturn func\r\n\t})\r\n}\r\n\r\n/**\r\n * Returns true if all fields in supplied validation result are marked valid\r\n * @param validationResult\r\n */\r\nfunction isValid(validationResult) {\r\n\treturn Object.keys(validationResult).every(d => validationResult[d].valid)\r\n}\r\n\r\n/** Returns true if the value is the same as field.unknown given that field.unknown is not empty */\r\nfunction isUnknown(value, field) {\r\n\tif (\r\n\t\t!field.unknown ||\r\n\t\tvalue === undefined ||\r\n\t\tvalue === null\r\n\t) \r\n\t\treturn false\r\n\t\r\n\tif (value.toString() === field.unknown) return true\r\n\r\n\treturn false\r\n}\r\n\r\nexport default validate\r\nexport {\r\n\tvalidateQualitative,\r\n\tvalidateQuantitative,\r\n\tvalidateDate,\r\n\tvalidateDateTime,\r\n\tvalidateText,\r\n\tvalidateICD10,\r\n\tvalidateRecord,\r\n\tisValid,\r\n\tisUnknown,\r\n\tinterpolateRecord,\r\n}\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport { isUnknown } from '../functions/validation'\r\n\r\nconst ValidationViewer = props => {\r\n\tconst fields = Object.keys(props.validation)\r\n\t\t.filter(\r\n\t\t\td =>\r\n\t\t\t\t(\r\n\t\t\t\t\tprops.record[d] || // Either record has prop...\r\n\t\t\t\t\tprops.codebook.find(e => e.name === d).calculated === \"yes\" // ... or field is a calculated value\r\n\t\t\t\t) && \r\n\t\t\t\t(!props.validation[d].valid || // Either not valid... \r\n\t\t\t\t\tprops.validation[d].warnings.length > 0) && // ... or has warnings\r\n\t\t\t\t!isUnknown(props.validation[d].value, d) // Isn't 'unknown'\r\n\t\t)\r\n\t\t.map(d => ({\r\n\t\t\t...props.validation[d],\r\n\t\t\tname: d,\r\n\t\t\tfield: props.codebook.find(e => e.name === d),\r\n\t\t}))\r\n\r\n\tconst groups = _.groupBy(fields, 'field.group1')\r\n\r\n\tconst focus = id => {\r\n\t\tlet element = document.getElementById(`field_${id}`)\r\n\t\telement.focus()\r\n\t}\r\n \r\n\tlet ui = Object.keys(groups).map(g => (\r\n\t\t<div key={g} className=\"group\">\r\n\t\t\t<div className=\"group-name\">{g}</div>\r\n\t\t\t{groups[g].map(d => (\r\n\t\t\t\t<div key={d.name} className=\"field\" onClick={() => focus(d.name)}>\r\n\t\t\t\t\t<div className=\"field-name\">{d.field.label}</div>\r\n\t\t\t\t\t{props.validation[d.name].errors.map((e, i) => (\r\n\t\t\t\t\t\t<div className=\"issue error\" key={`error ${i}`}>\r\n\t\t\t\t\t\t\t<span className=\"fa fa-bug\" />\r\n\t\t\t\t\t\t\t<div className=\"description\">{e}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{props.validation[d.name].warnings.map((e, i) => (\r\n\t\t\t\t\t\t<div className=\"issue warning\" key={`warning ${i}`}>\r\n\t\t\t\t\t\t\t<span className=\"fa fa-warning\" />\r\n\t\t\t\t\t\t\t<div className=\"description\">{e}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t))\r\n\r\n\treturn <div className=\"validation-container\">{ui}</div>\r\n}\r\n\r\nexport default ValidationViewer\r\n","import React from 'react'\r\nimport { Prompt, Link, withRouter } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport FieldEditor from './FieldEditor'\r\nimport { validateRecord, isValid } from '../functions/validation'\r\nimport Helmet from 'react-helmet'\r\nimport ValidationViewer from './ValidationViewer'\r\n\r\nconst RecordEditorState = {\r\n\tNONE: 0,\r\n\tLOADING: 1,\r\n\tNOTFOUND: 2,\r\n\tREADY: 3,\r\n}\r\n\r\n/**\r\n * Editor for a set of fields in the supplied Record.\r\n * Listens for changes through the FieldEditor's onChange prop\r\n * and persists all changes directly to database.\r\n */\r\nclass RecordEditor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tlet cbo = {}\r\n\t\tfor (let i = 0; i < props.codebook.length; i++)\r\n\t\t\tcbo[props.codebook[i].name] = props.codebook[i]\r\n\r\n\t\tconsole.log(cbo)\r\n\r\n\t\tthis.state = {\r\n\t\t\tstate: RecordEditorState.NONE,\r\n\t\t\trecord: null,\r\n\t\t\tallowRadios: false,\r\n\t\t\tdoubleEntry: !!props['double-entry'],\r\n\t\t\tdisableExitShield: false,\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tstate: RecordEditorState.LOADING,\r\n\t\t\trecord: null,\r\n\t\t})\r\n\r\n\t\tlet record = await this.props.db.records\r\n\t\t\t.where('uid')\r\n\t\t\t.equals(Number(this.props.uid))\r\n\t\t\t.first()\r\n\r\n\t\tlet pids = await this.props.db.records.toArray()\r\n\r\n\t\tlet state = {\r\n\t\t\tstate: !record ? RecordEditorState.NOTFOUND : RecordEditorState.READY,\r\n\t\t\tpids: pids.map((d) => d.pid),\r\n\t\t}\r\n\r\n\t\tif (this.state.doubleEntry) {\r\n\t\t\tstate.referenceRecord = { ...record }\r\n\t\t\tstate.record = { uid: this.props.uid }\r\n\t\t\tthis.props.codebook\r\n\t\t\t\t.filter((d) => d.double_enter !== 'yes')\r\n\t\t\t\t.forEach((d) => (state.record[d.name] = record[d.name]))\r\n\t\t} else {\r\n\t\t\tstate.record = record\r\n\t\t}\r\n\r\n\t\tthis.setState(state)\r\n\t}\r\n\r\n\tasync updatePIDs() {\r\n\t\tlet pids = await this.props.db.records.toArray()\r\n\r\n\t\tthis.setState({\r\n\t\t\tpids: pids.map((d) => d[this.props.config.id_field]),\r\n\t\t})\r\n\t}\r\n\r\n\t// Persists changes to databases\r\n\tasync onChange(field, value) {\r\n\t\tlet record = { ...this.state.record }\r\n\t\trecord[field.name] = value\r\n\t\tthis.setState({\r\n\t\t\trecord: record,\r\n\t\t})\r\n\r\n\t\tif (this.state.doubleEntry) return\r\n\r\n\t\tlet modify = {}\r\n\t\tmodify[field.name] = value\r\n\r\n\t\tawait this.props.db.records\r\n\t\t\t.where('uid')\r\n\t\t\t.equals(Number(this.props.uid))\r\n\t\t\t.modify(modify)\r\n\r\n\t\t// If the field that changed was idField, update the cached id numbers\r\n\t\tif (field.name === this.props.config.id_field) await this.updatePIDs()\r\n\t}\r\n\r\n\tonFocusFieldEditor(fe) {\r\n\t\tthis.setState({\r\n\t\t\tstate: this.state.state,\r\n\t\t\trecord: this.state.record,\r\n\t\t\tfocusedField: fe,\r\n\t\t})\r\n\t}\r\n\r\n\tonBlurFieldEditor(fe) {\r\n\t\tthis.setState({\r\n\t\t\tstate: this.state.state,\r\n\t\t\trecord: this.state.record,\r\n\t\t\tfocusedField: null,\r\n\t\t})\r\n\t}\r\n\r\n\tsaveAndExit() {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tdisableExitShield: true,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.props.history.push('/')\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\texitWithoutSaving() {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tdisableExitShield: true,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.props.history.push('/')\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tmarkFieldsUnknown() {\r\n\t\tlet record = { ...this.state.record }\r\n\t\tfor (let c of this.props.codebook) {\r\n\t\t\tif (\r\n\t\t\t\tc.input === 'yes' &&\r\n\t\t\t\t(record[c.name] === undefined || record[c.name] === '')\r\n\t\t\t) {\r\n\t\t\t\trecord[c.name] = c.unknown\r\n\t\t\t\tthis.onChange(c, c.unknown)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tstate: this.state.state,\r\n\t\t\trecord: record,\r\n\t\t\tfocusedField: null,\r\n\t\t})\r\n\t}\r\n\r\n\tasync unlockRecord() {\r\n\t\tlet record = { ...this.state.record }\r\n\t\trecord.locked = 'FALSE'\r\n\t\tawait this.props.db.records\r\n\t\t\t.where('uid')\r\n\t\t\t.equals(Number(this.props.uid))\r\n\t\t\t.modify({\r\n\t\t\t\tlocked: false,\r\n\t\t\t})\r\n\r\n\t\tthis.setState({\r\n\t\t\trecord: record,\r\n\t\t})\r\n\t}\r\n\r\n\tvalidateFieldGroup(group, validation) {\r\n\t\tif (\r\n\t\t\tthis.state.doubleEntryErrors &&\r\n\t\t\tgroup.some((d) => this.state.doubleEntryErrors.indexOf(d.name) !== -1)\r\n\t\t)\r\n\t\t\treturn 'double-entry-error'\r\n\r\n\t\tif (group.some((d) => d.input !== 'yes')) return 'valid'\r\n\r\n\t\tif (group.some((d) => validation[d.name].unknown)) return 'unknown'\r\n\r\n\t\tif (group.some((d) => validation[d.name].incomplete)) return 'incomplete'\r\n\r\n\t\tif (group.some((d) => !validation[d.name].valid)) return 'invalid'\r\n\r\n\t\treturn 'valid'\r\n\t}\r\n\r\n\tasync discard(db, uid) {\r\n\t\tdb.records.where('uid').equals(uid).delete()\r\n\t}\r\n\r\n\tcheckDoubleEntry() {\r\n\t\tlet errors = this.props.codebook\r\n\t\t\t.filter(\r\n\t\t\t\t(d) =>\r\n\t\t\t\t\td.double_enter === 'yes' &&\r\n\t\t\t\t\td.input === 'yes' &&\r\n\t\t\t\t\td.calculated !== 'yes' &&\r\n\t\t\t\t\tthis.state.referenceRecord[d.name] !== this.state.record[d.name]\r\n\t\t\t)\r\n\t\t\t.map((d) => d.name)\r\n\r\n\t\tconsole.log(errors)\r\n\t\tthis.setState({\r\n\t\t\tdoubleEntryErrors: errors,\r\n\t\t})\r\n\t}\r\n\r\n\thandleClose() {\r\n\t\t// checks if the record has a id field on the record object. If not, the record is not saved.\r\n\t\tif (!Object.keys(this.state.record).includes(this.props.config.id_field)) {\r\n\t\t\tthis.props.db.records.where('uid').equals(this.state.record.uid).delete()\r\n\t\t\tthis.saveAndExit()\r\n\t\t} else {\r\n\t\t\tthis.saveAndExit()\r\n\t\t}\r\n\t}\r\n\r\n\tasync finalizeDoubleEntry() {\r\n\t\tawait this.props.db.records\r\n\t\t\t.where('uid')\r\n\t\t\t.equals(Number(this.props.uid))\r\n\t\t\t.modify({\r\n\t\t\t\tlocked: true,\r\n\t\t\t})\r\n\r\n\t\tthis.props.history.push('/')\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Handle loading and errors\r\n\t\tif (this.state.state === RecordEditorState.LOADING) {\r\n\t\t\treturn <div className=\"content\">Loading...</div>\r\n\t\t} else if (this.state.state === RecordEditorState.NOTFOUND) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\tCouldn't find record with id: {this.props.uid}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else if (this.state.state === RecordEditorState.NONE) {\r\n\t\t\treturn <div className=\"content\">Idle</div>\r\n\t\t}\r\n\r\n\t\tlet locked = returnLockedValueAsBoolean(this.state.record.locked)\r\n\t\tfunction returnLockedValueAsBoolean(tempLockedValue) {\r\n\t\t\tif (tempLockedValue === 'TRUE') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (tempLockedValue === 'true') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (tempLockedValue === true) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\r\n\t\t\tif (tempLockedValue === 'FALSE') {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tif (tempLockedValue === 'false') {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tif (tempLockedValue === false) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// Populate fields from codebook\r\n\t\tlet fields = {}\r\n\t\tfor (let field of this.props.codebook) fields[field.name] = field\r\n\r\n\t\t// Do validation\r\n\t\tlet validation = validateRecord(this.state.record, this.props.codebook)\r\n\t\tlet valid = isValid(validation)\r\n\r\n\t\t// Check for duplicate PIDs\r\n\t\tif (\r\n\t\t\tthis.state.pids.filter(\r\n\t\t\t\t(d) => parseInt(d) === parseInt(validation.pid.value)\r\n\t\t\t).length > 1\r\n\t\t) {\r\n\t\t\tvalidation.pid.errors.push('Duplicate Patient study ID')\r\n\t\t\tvalidation.pid.valid = false\r\n\t\t}\r\n\r\n\t\t// Handle leaving page with invalid record\r\n\t\tlet prompt =\r\n\t\t\t!this.state.disableExitShield &&\r\n\t\t\t(!valid || (this.state.doubleEntry && locked)) ? (\r\n\t\t\t\t<Prompt\r\n\t\t\t\t\tmessage={(nextLocation) => {\r\n\t\t\t\t\t\tif (this.state.doubleEntry) {\r\n\t\t\t\t\t\t\treturn 'You have not yet completed this Double Entry. Discard changes?'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Prompt>\r\n\t\t\t) : null\r\n\r\n\t\t// Group fields using 'group1'\r\n\t\tlet groups = _.groupBy(\r\n\t\t\tthis.props.codebook.filter((d) => d.visible === 'yes'),\r\n\t\t\t'group1'\r\n\t\t)\r\n\r\n\t\t// Create field groups\r\n\t\tlet fieldGroups = Object.keys(groups).map((k) => {\r\n\t\t\tlet i = 0\r\n\t\t\t// Group fields in group using 'group2'\r\n\t\t\t// This level is to group things like connected Dates and Times, or Free Text and ICD-10 codes\r\n\t\t\tlet fieldGroups = _.groupBy(groups[k], (d) =>\r\n\t\t\t\td.group2 === '' ? '_' + ++i : d.group2\r\n\t\t\t) // HACK: Create unique id(_#) for fields with empty group2 so they are not all grouped together\r\n\t\t\tlet fieldGroupElements = Object.keys(fieldGroups).map((d) => {\r\n\t\t\t\tlet label = d[0] === '_' ? null : <div className=\"label\">{d}</div>\r\n\t\t\t\tlet fields = fieldGroups[d].map((d) => (\r\n\t\t\t\t\t<FieldEditor\r\n\t\t\t\t\t\tkey={d.name}\r\n\t\t\t\t\t\tdata={d}\r\n\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\tlocked || (this.state.doubleEntry && d.double_enter !== 'yes')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trecord={this.state.record}\r\n\t\t\t\t\t\tallowRadios={this.state.allowRadios}\r\n\t\t\t\t\t\tvalidation={validation[d.name]}\r\n\t\t\t\t\t\tunlabeled={d.group2 !== ''}\r\n\t\t\t\t\t\tonChange={(f, v) => this.onChange(f, v)}\r\n\t\t\t\t\t\tonFocus={(fe) => this.onFocusFieldEditor(fe)}\r\n\t\t\t\t\t\tonBlur={(fe) => this.onBlurFieldEditor(fe)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\r\n\t\t\t\tlet isFocused =\r\n\t\t\t\t\tthis.state.focusedField != null &&\r\n\t\t\t\t\tfieldGroups[d].find(\r\n\t\t\t\t\t\t(d) => d.name === this.state.focusedField.props.data.name\r\n\t\t\t\t\t) != null\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={[\r\n\t\t\t\t\t\t\t'field_group',\r\n\t\t\t\t\t\t\tisFocused ? 'focused' : null,\r\n\t\t\t\t\t\t\tthis.validateFieldGroup(fieldGroups[d], validation),\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t.filter(Boolean)\r\n\t\t\t\t\t\t\t.join(' ')}\r\n\t\t\t\t\t\tkey={d}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.validateFieldGroup(fieldGroups[d], validation)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t{fields}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"record_group\" key={k}>\r\n\t\t\t\t\t<h2>{k}</h2>\r\n\t\t\t\t\t<div className=\"fields\">{fieldGroupElements}</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\tlet showFinalize =\r\n\t\t\tvalid &&\r\n\t\t\tthis.state.record.cr === '1' &&\r\n\t\t\t!this.state.doubleEntry &&\r\n\t\t\tlocked !== true\r\n\t\tlet fieldHelp = !this.state.focusedField ? (\r\n\t\t\t<div className=\"field_help\"></div>\r\n\t\t) : (\r\n\t\t\t<div\r\n\t\t\t\tclassName={\r\n\t\t\t\t\t'field_help visible' +\r\n\t\t\t\t\t(showFinalize || this.state.doubleEntry ? ' valid-record' : '')\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"label\">{this.state.focusedField.props.data.label}</div>\r\n\t\t\t\t<div className=\"errors\">\r\n\t\t\t\t\t{validation[this.state.focusedField.props.data.name].errors.map(\r\n\t\t\t\t\t\t(d, i) => (\r\n\t\t\t\t\t\t\t<div className=\"error\" key={i}>\r\n\t\t\t\t\t\t\t\t{d}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"warnings\">\r\n\t\t\t\t\t{validation[this.state.focusedField.props.data.name].warnings.map(\r\n\t\t\t\t\t\t(d, i) => (\r\n\t\t\t\t\t\t\t<div className=\"warning\" key={i}>\r\n\t\t\t\t\t\t\t\t{d}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t{this.state.focusedField.props.data.description}\r\n\t\t\t\t\t{this.state.focusedField.props.data.show_valid_values === 'yes' ? (\r\n\t\t\t\t\t\t<div className=\"valid_values\">\r\n\t\t\t\t\t\t\t{this.formatValid(this.state.focusedField.props.data)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"coding_description\"\r\n\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t__html: this.state.focusedField.props.data.coding_instructions,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t\tlet finalizeEntry = showFinalize ? (\r\n\t\t\t<div className=\"finalize-entry\">\r\n\t\t\t\t<Link to={'/complete/' + this.state.record.uid}>\r\n\t\t\t\t\t<button className=\"button is-primary \">\r\n\t\t\t\t\t\tBegin double entry\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t) : null\r\n\r\n\t\tlet checkEntry =\r\n\t\t\tthis.state.doubleEntry && locked !== true ? (\r\n\t\t\t\t<div className=\"finalize-entry\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"button is-primary \"\r\n\t\t\t\t\t\tonClick={() => this.checkDoubleEntry()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCheck\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{this.state.doubleEntryErrors &&\r\n\t\t\t\t\t\tthis.state.doubleEntryErrors.length === 0 && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"button is-primary \"\r\n\t\t\t\t\t\t\t\tonClick={() => this.finalizeDoubleEntry()}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tFinalize\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : null\r\n\r\n\t\tconst idField = this.props.codebook.find(\r\n\t\t\t(d) => d.name === this.props.config.id_field\r\n\t\t)\r\n\t\tconst id = this.state.record[this.props.config.id_field]\r\n\t\tlet titleText = this.state.doubleEntry\r\n\t\t\t? `Double enter ${idField.label}: ${id}`\r\n\t\t\t: `Editing ${idField.label}: ${id}`\r\n\t\tif (locked)\r\n\t\t\ttitleText = (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<span className=\"fa fa-lock\" /> Viewing locked {idField.label}: {id}\r\n\t\t\t\t</span>\r\n\t\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"editor\">\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>{`${this.props.config.name} - ${titleText}`}</title>\r\n\t\t\t\t</Helmet>\r\n\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t{prompt}\r\n\t\t\t\t\t<h1>{titleText}</h1>\r\n\t\t\t\t\t<div className=\"toolbar\">\r\n\t\t\t\t\t\t{!locked && (!this.state.doubleEntry || true) && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"button  save-and-exit\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.handleClose()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tClose record\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{!locked && (!this.state.doubleEntry || true) && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"button  mark-unknown\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.markFieldsUnknown()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMark empty fields as Not Known\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{locked && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button  mark-unknown\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.exitWithoutSaving()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tReturn\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"button  mark-unknown\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.unlockRecord()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUnlock\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t<label className=\"checkbox\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.props.allowRadios}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.changeRadios(e)}\r\n\t\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t\t\t[debug] Enable radio buttons\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"record_fields\">{fieldGroups}</div>\r\n\t\t\t\t\t{fieldHelp}\r\n\t\t\t\t\t{finalizeEntry}\r\n\t\t\t\t\t{checkEntry}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"validation\">\r\n\t\t\t\t\t<ValidationViewer\r\n\t\t\t\t\t\trecord={this.state.record}\r\n\t\t\t\t\t\tcodebook={this.props.codebook}\r\n\t\t\t\t\t\tvalidation={validation}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tchangeRadios(e) {\r\n\t\tthis.setState({\r\n\t\t\tallowRadios: !this.state.allowRadios,\r\n\t\t})\r\n\t}\r\n\r\n\tformatValid(data) {\r\n\t\tif (data.type === 'quantitative')\r\n\t\t\treturn 'Range: ' + data.valid_values.split(',').join(' .. ')\r\n\r\n\t\treturn ''\r\n\t}\r\n}\r\n\r\nexport default withRouter(RecordEditor)\r\n","import csvParse from 'csv-parse'\r\nimport { validateRecord } from './validation'\r\n\r\nconst unset = '<unset>' // The value to use when a value is not defined in the record\r\nconst csv_separator = ',' // Between fields\r\nconst csv_encloser = '\"' // Enclosing fields\r\nconst csv_row_break = '\\n' // Line break\r\n\r\nfunction serializeField(v) {\r\n\treturn (\r\n\t\tcsv_encloser +\r\n\t\tv\r\n\t\t\t.toString()\r\n\t\t\t.replace(/\"/gi, '\"\"') // Double up double quotes\r\n\t\t\t.replace(/'/gi, \"''\") + // Double up single quotes\r\n\t\tcsv_encloser\r\n\t)\r\n}\r\n\r\n/**\r\n * Creates a CSV string for the supplied records\r\n * @param {[]} codebook - codebook definition\r\n * @param {[]} records  - set of records\r\n * @returns {string}    - csv formatted string\r\n */\r\nfunction exportCSV(codebook, records) {\r\n\tlet promise = new Promise((resolve) => {\r\n\t\tlet data = []\r\n\t\tlet headers = (data[0] = ['uid'])\r\n\r\n\t\t// Add headers\r\n\t\tfor (let c of codebook)\r\n\t\t\tif (c.input === 'yes') headers.push(serializeField(c.name))\r\n\t\theaders.push('valid')\r\n\t\theaders.push('locked')\r\n\r\n\t\t// Add data\r\n\t\tfor (let record of records) {\r\n\t\t\tlet row = [record.uid]\r\n\r\n\t\t\tfor (let code of codebook)\r\n\t\t\t\tif (code.input === 'yes') {\r\n\t\t\t\t\trow.push(serializeField(record[code.name] || ''))\r\n\t\t\t\t}\r\n\r\n\t\t\t// Validation\r\n\t\t\tlet validation = validateRecord(record, codebook)\r\n\t\t\tlet issues = Object.keys(validation).reduce(\r\n\t\t\t\t(a, b) => a + validation[b].errors.length,\r\n\t\t\t\t0\r\n\t\t\t)\r\n\t\t\trow.push(issues === 0)\r\n\t\t\trow.push(record.locked)\r\n\r\n\t\t\tdata.push(row)\r\n\t\t}\r\n\r\n\t\tlet result = ''\r\n\t\tfor (let r of data) result += r.join(csv_separator) + csv_row_break\r\n\r\n\t\tresolve(result)\r\n\t})\r\n\treturn promise\r\n}\r\n\r\nasync function importCSV(text, db) {\r\n\tlet promise = new Promise((resolve, reject) => {\r\n\t\tcsvParse(\r\n\t\t\ttext,\r\n\t\t\t{\r\n\t\t\t\tdelimiter: csv_separator,\r\n\t\t\t},\r\n\t\t\tasync (err, rs) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\t// Something went wrong\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Parsed ok\r\n\t\t\t\t\tlet headers = rs.splice(0, 1)[0]\r\n\t\t\t\t\tlet records = []\r\n\t\t\t\t\tfor (let r of rs) {\r\n\t\t\t\t\t\tlet record = {}\r\n\t\t\t\t\t\tfor (let i = 0; i < headers.length; i++) {\r\n\t\t\t\t\t\t\tlet k = headers[i]\r\n\t\t\t\t\t\t\tlet v = r[i]\r\n\r\n\t\t\t\t\t\t\tif (v !== '<unset>') record[k] = k === 'uid' ? parseInt(v) : v\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trecords.push(record)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Clear database\r\n\t\t\t\t\tawait db.records.clear()\r\n\r\n\t\t\t\t\t// Insert into database\r\n\t\t\t\t\tlet put = await db.records.bulkPut(records)\r\n\r\n\t\t\t\t\t// Return result\r\n\t\t\t\t\tresolve(put)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t})\r\n\r\n\treturn promise\r\n}\r\n\r\nexport { exportCSV, importCSV }\r\n","/**\r\n * Download a string as a text file\r\n * Defaults to 'application/octet-stream'\r\n */\r\n\r\nexport default function(\r\n\tdata,\r\n\tfilename,\r\n\tprefix = 'data:application/octet-stream,'\r\n) {\r\n\t// Encode data\r\n\tlet blob = new Blob([data], { type: prefix })\r\n\tlet encoded = URL.createObjectURL(blob)\r\n\r\n\t// Create element with href and download attributes\r\n\tlet element = document.createElement('A')\r\n\telement.setAttribute('href', encoded)\r\n\telement.setAttribute('download', filename)\r\n\telement.click()\r\n}\r\n","import React from 'react'\r\nimport './Spinner.css'\r\nfunction Spinner() {\r\n\treturn (\r\n\t\t<div className=\"lds-spinner\">\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport Spinner from './Spinner'\r\nimport { FilePicker } from 'react-file-picker'\r\nimport { importCSV } from '../functions/csv'\r\n\r\nfunction ButtonContainer({\r\n\tcreateRecord,\r\n\tcleanUpInvalidRecords,\r\n\texportAndDownloadCSV,\r\n\tisLoading,\r\n\tsetLoading,\r\n\tupdateRecords,\r\n\tdb,\r\n}) {\r\n\tasync function importCSVText(text) {\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tconsole.log(text)\r\n\t\t\tawait importCSV(text, db)\r\n\t\t\tconsole.log(db)\r\n\t\t\tupdateRecords()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('error', err)\r\n\t\t\talert('Error when importing database: ' + err)\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t\treturn setLoading(false)\r\n\t}\r\n\r\n\tasync function handleCsvImport(importCsvFile) {\r\n\t\tif (!window.confirm(`Importing may overwrite data. Continue?`)) return\r\n\t\tif (importCsvFile.text) {\r\n\t\t\tlet text = await importCsvFile.text()\r\n\t\t\timportCSVText(text)\r\n\t\t} else {\r\n\t\t\t// For safari that lacks the .text() call\r\n\t\t\tvar fileReader = new FileReader()\r\n\t\t\tfileReader.addEventListener('loadend', (e) => {\r\n\t\t\t\tvar text = e.srcElement.result\r\n\t\t\t\timportCSVText(text)\r\n\t\t\t})\r\n\t\t\tfileReader.readAsText(importCsvFile)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"button-container\">\r\n\t\t\t<div className=\"buttons\">\r\n\t\t\t\t<button className=\"button is-primary \" onClick={createRecord}>\r\n\t\t\t\t\tCreate Record\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"button \" onClick={cleanUpInvalidRecords}>\r\n\t\t\t\t\tDelete invalid records\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"button \" onClick={exportAndDownloadCSV}>\r\n\t\t\t\t\tExport as CSV\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"fileUploader\">\r\n\t\t\t\t\t<FilePicker\r\n\t\t\t\t\t\textensions={['csv']}\r\n\t\t\t\t\t\tmaxSize={100}\r\n\t\t\t\t\t\tonChange={(importCsvFile) => handleCsvImport(importCsvFile)}\r\n\t\t\t\t\t\tonError={(err) => {\r\n\t\t\t\t\t\t\tconsole.log('Upload error', err)\r\n\t\t\t\t\t\t\talert(err.toString())\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"button \">Import from CSV</button>\r\n\t\t\t\t\t</FilePicker>\r\n\t\t\t\t</div>\r\n\t\t\t\t{isLoading ? <Spinner /> : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ButtonContainer\r\n","import React from 'react'\r\n\r\nexport default function SearchRecords({\r\n\tchangeSearchText,\r\n\tonSearchFieldChanged,\r\n\tcodebook,\r\n\tclearSearchText,\r\n\tsearch,\r\n\tsearchField,\r\n}) {\r\n\treturn (\r\n\t\t<div className=\"search\">\r\n\t\t\t<span className=\"fa fa-search\"></span>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"input is-primary\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={search}\r\n\t\t\t\tonChange={(e) => changeSearchText(e)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"select is-primary search-field\">\r\n\t\t\t\t<select value={searchField} onChange={(e) => onSearchFieldChanged(e)}>\r\n\t\t\t\t\t<option default value=\"\" key=\"default\">\r\n\t\t\t\t\t\tAll fields\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t{codebook?.map((d) => (\r\n\t\t\t\t\t\t<option value={d.name} key={d.name}>\r\n\t\t\t\t\t\t\t{d.label}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"button \" onClick={() => clearSearchText()}>\r\n\t\t\t\t<span className=\"fa fa-remove\"></span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { validateRecord, isUnknown } from '../functions/validation'\r\n\r\nexport default function RecordsContainer({\r\n\tfilteredRecords,\r\n\tpage,\r\n\tpageSize,\r\n\tcodebook,\r\n\tsearchHits,\r\n\tdeleteRecord,\r\n\tsortField,\r\n}) {\r\n\tfunction getList(str) {\r\n\t\treturn str\r\n\t\t\t.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/g)\r\n\t\t\t.map((d) => d.replace(/\"/g, ''))\r\n\t}\r\n\tfunction getFieldText(codebook, record, fieldName) {\r\n\t\tlet field = codebook.find((d) => d.name === fieldName)\r\n\t\tif (\r\n\t\t\tfield.type === 'qualitative' &&\r\n\t\t\tfield.valid_values &&\r\n\t\t\tfield.value_labels\r\n\t\t) {\r\n\t\t\tlet values = getList(field.valid_values).map((d) => parseInt(d))\r\n\t\t\tlet labels = getList(field.value_labels)\r\n\t\t\tlet value = parseInt(record[fieldName])\r\n\t\t\treturn labels[values.find((d) => d.toString() === value.toString())]\r\n\t\t}\r\n\r\n\t\tif (isUnknown(record[fieldName] || '', field)) return 'unknown'\r\n\r\n\t\treturn record[fieldName]\r\n\t}\r\n\r\n\tlet records = filteredRecords\r\n\t\t// Paging\r\n\t\t.slice(page * pageSize, (page + 1) * pageSize)\r\n\t\t.map((d) => {\r\n\t\t\tlet validation = validateRecord(d, codebook)\r\n\t\t\tlet issues = Object.keys(validation)\r\n\t\t\t\t.filter((d) => !validation[d].valid)\r\n\t\t\t\t.map((d) => [d, validation[d]])\r\n\r\n\t\t\tlet issueDisplay = null\r\n\r\n\t\t\tif (issues.length > 0) {\r\n\t\t\t\tissueDisplay = (\r\n\t\t\t\t\t<span className=\"issues\">\r\n\t\t\t\t\t\t<span className=\"fa fa-warning issues\" />\r\n\t\t\t\t\t\t<span>{issues.length}</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tlet locked = (d.locked || '').toString().toLowerCase() === 'true'\r\n\t\t\treturn (\r\n\t\t\t\t<div key={d.uid}>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tkey={d.uid}\r\n\t\t\t\t\t\tto={'/record/' + d.uid}\r\n\t\t\t\t\t\tclassName={`list-item ${locked ? ' locked' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"pid\">\r\n\t\t\t\t\t\t\t{locked && <span className=\"fa fa-lock\"> </span>} {d.pid}{' '}\r\n\t\t\t\t\t\t\t{issueDisplay}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"hits\">\r\n\t\t\t\t\t\t\t{searchHits[d.uid]\r\n\t\t\t\t\t\t\t\t? searchHits[d.uid].slice(0, 10).map((e, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t{e[0]}: {e[1]}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"sort-field\">\r\n\t\t\t\t\t\t\t{getFieldText(codebook, d, sortField)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tdisabled={d.locked === 'TRUE'}\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\tdeleteRecord(d.uid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName={`button ${\r\n\t\t\t\t\t\t\t\td.locked === 'TRUE' ? 'is-disabled' : ' is-danger'\r\n\t\t\t\t\t\t\t} is-small is-outlined  remove`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"fa fa-remove\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\treturn records\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nfunction Pager(props) {\r\n\tconst clampValue = (value) =>\r\n\t\ttypeof value === 'string' ? value : Math.max(1, Math.min(value, props.max))\r\n\r\n\tlet [page, setPage] = useState(props.page + 1)\r\n\tpage = clampValue(page)\r\n\r\n\tfunction pageTextChanged(e) {\r\n\t\tlet newPage = parseInt(e.target.value)\r\n\t\tif (!Number.isNaN(newPage)) updatePage(newPage)\r\n\t\telse setPage('')\r\n\t}\r\n\r\n\tfunction updatePage(value) {\r\n\t\tvalue = clampValue(value)\r\n\t\tsetPage(value)\r\n\t\tprops.onPageChange(value - 1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"paging\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button is-primary is-small\"\r\n\t\t\t\tdisabled={page === 1}\r\n\t\t\t\tonClick={(e) => updatePage(page - 1)}\r\n\t\t\t>\r\n\t\t\t\t&lt;\r\n\t\t\t</button>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"input is-small is-primary\"\r\n\t\t\t\tvalue={page}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={(e) => pageTextChanged(e)}\r\n\t\t\t\tonFocus={(e) => e.target.setSelectionRange(0, 999)}\r\n\t\t\t\tonBlur={() => setPage(props.page + 1)}\r\n\t\t\t></input>\r\n\t\t\t<span>/</span>\r\n\t\t\t<span>{props.max}</span>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button is-primary is-small\"\r\n\t\t\t\tdisabled={page === props.max}\r\n\t\t\t\tonClick={() => updatePage(page + 1)}\r\n\t\t\t>\r\n\t\t\t\t&gt;\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Pager\r\n","import React from 'react'\r\nimport Pager from './Pager'\r\n\r\nexport default function SortContainer({\r\n\tonSortFieldChanged,\r\n\tonSortOrderChanged,\r\n\tsortField,\r\n\tonPageChange,\r\n\tfilteredRecords,\r\n\tpageSize,\r\n\tstatePage,\r\n\tcodebook,\r\n\tsortOrder,\r\n\texactMatch,\r\n\tincludeUnknown,\r\n\tincludeLocked,\r\n\tonIncludeUnknownChanged,\r\n\tonIncludeLockedChanged,\r\n\tonExactMatchChanged,\r\n}) {\r\n\tlet pageCount = Math.ceil(filteredRecords.length / pageSize)\r\n\tlet page = Math.max(0, Math.min(statePage, pageCount - 1))\r\n\tlet sort = (\r\n\t\t<div className=\"sort\">\r\n\t\t\t<Pager\r\n\t\t\t\tpage={page}\r\n\t\t\t\tmax={pageCount}\r\n\t\t\t\tonPageChange={(e) => onPageChange(e)}\r\n\t\t\t></Pager>\r\n\t\t\t<div className=\"select is-primary sortField\">\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"select\"\r\n\t\t\t\t\tvalue={sortField}\r\n\t\t\t\t\tonChange={(e) => onSortFieldChanged(e)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{codebook.map((d) => (\r\n\t\t\t\t\t\t<option value={d.name} key={d.name}>\r\n\t\t\t\t\t\t\t{d.label}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"control\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tclassName=\"checkbox\"\r\n\t\t\t\t\tchecked={sortOrder !== 1}\r\n\t\t\t\t\tonChange={(e) => onSortOrderChanged(e)}\r\n\t\t\t\t\tid=\"Ascending\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"Ascending\"> Ascending</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"control\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tclassName=\"checkbox\"\r\n\t\t\t\t\tchecked={includeUnknown}\r\n\t\t\t\t\tonChange={(e) => onIncludeUnknownChanged(e)}\r\n\t\t\t\t\tid=\"Include unknown\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"Include unknown\"> Include unknown</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"control\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tclassName=\"checkbox\"\r\n\t\t\t\t\tchecked={includeLocked}\r\n\t\t\t\t\tonChange={(e) => onIncludeLockedChanged(e)}\r\n\t\t\t\t\tid=\"includeLocked\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"includeLocked\"> Include locked</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"control\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tclassName=\"checkbox\"\r\n\t\t\t\t\tchecked={exactMatch}\r\n\t\t\t\t\tonChange={(e) => onExactMatchChanged(e)}\r\n\t\t\t\t\tid=\"exactMatch\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"exactMatch\"> Exact match</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\treturn sort\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n\tconst [sortLocalStorageValue, setSortLocalStorageValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\tlet value = window.localStorage.getItem(key)\r\n\t\t\treturn value ? JSON.parse(value) : initialValue\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\treturn initialValue\r\n\t\t}\r\n\t})\r\n\t// Function to set the localStorage Value\r\n\r\n\tconst setValue = useCallback(\r\n\t\t(value) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst valueToStore =\r\n\t\t\t\t\tvalue instanceof Function ? value(sortLocalStorageValue) : value\r\n\t\t\t\t//Save value to state\r\n\t\t\t\tsetSortLocalStorageValue(valueToStore)\r\n\t\t\t\t//Save value to localStorage\r\n\t\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore))\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error(`Error when attempting to useLocalState Hook: ${error}`)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[key, sortLocalStorageValue]\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tlet data = window.localStorage.getItem(key)\r\n\t\tif (!data) {\r\n\t\t\tsetValue(initialValue)\r\n\t\t}\r\n\t}, [setValue, key, initialValue])\r\n\r\n\treturn [sortLocalStorageValue, setValue]\r\n}\r\nexport default useLocalStorage\r\n","import React, { useState, useReducer, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { exportCSV } from '../functions/csv'\r\nimport download from '../functions/download'\r\nimport {\r\n\tvalidateRecord,\r\n\tisValid,\r\n\tinterpolateRecord,\r\n\tisUnknown,\r\n} from '../functions/validation'\r\nimport Helmet from 'react-helmet'\r\n\r\nimport ButtonContiner from './ButtonContainer'\r\nimport SearchRecords from './SearchRecords'\r\nimport RecordsContainer from './RecordsContainer'\r\nimport SortContainer from './SortContainer'\r\nimport useLocalStorage from './Hooks/useLocalStorage'\r\n\r\n/**\r\n * Renders a list of the available records.\r\n * Clicking a record will take you to the corresponding RecordEditor page.\r\n * User can also create records here.\r\n */\r\nfunction RecordPicker(props) {\r\n\tconst [state, setState] = useState({\r\n\t\trecords: [],\r\n\t\tsearch: '',\r\n\t\tsearchField: '',\r\n\t\tpageSize: props.config.page_size,\r\n\t\tpage: 0,\r\n\t})\r\n\r\n\tconst [localStorageValue, setLocalStorageValue] = useLocalStorage(\r\n\t\t'recordPickerSortingState',\r\n\t\t{\r\n\t\t\tsortField: props.config.id_field,\r\n\t\t\tsortOrder: 1,\r\n\t\t\tincludeUnknown: false,\r\n\t\t\tincludeLocked: true,\r\n\t\t\texactMatch: false,\r\n\t\t}\r\n\t)\r\n\r\n\tlet reducer = (sortState, action) => {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'LOCALSTORAGE_STATE_UPDATE':\r\n\t\t\t\tsetLocalStorageValue({ ...sortState, [action.field]: action.payload })\r\n\t\t\t\treturn { ...sortState, [action.field]: action.payload, page: 0 }\r\n\t\t\tcase 'PAGE_UPDATE':\r\n\t\t\t\treturn setLocalStorageValue({ ...sortState, page: action.payload })\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Reducer Error when attempting to use this action: ${action.type},\r\n\t\t\t\t\t\t\t\t\t and this Payload: ${action.payload}`\r\n\t\t\t\t)\r\n\t\t}\r\n\t}\r\n\tconst [sortState, dispatch] = useReducer(reducer, localStorageValue)\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [filteredRecordsState, setFilteredRecordsState] = useState([])\r\n\tconst [searchResults, setSearchResults] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateRecords()\r\n\t\tgetCodeBookValue()\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\r\n\tconst getCodeBookValue = () => {\r\n\t\tlet { type } = props.codebook.find(\r\n\t\t\t(code) => code.name === sortState.sortField\r\n\t\t)\r\n\t\treturn dispatch({\r\n\t\t\ttype: 'LOCALSTORAGE_STATE_UPDATE',\r\n\t\t\tfield: 'sortFieldType',\r\n\t\t\tpayload: type,\r\n\t\t})\r\n\t}\r\n\r\n\tasync function updateRecords() {\r\n\t\tlet records = await props.db.records.toArray()\r\n\t\tsetState({ ...state, records: records })\r\n\t}\r\n\r\n\tasync function createRecord() {\r\n\t\tlet recordId = await props.db.records.add({\r\n\t\t\tname: 'Unnamed',\r\n\t\t\tlocked: 'FALSE',\r\n\t\t})\r\n\r\n\t\tprops.history.push('/record/' + recordId)\r\n\t\tupdateRecords()\r\n\t}\r\n\r\n\tasync function deleteRecord(uid) {\r\n\t\tif (window.confirm(`💣 Delete record: ${uid}?`)) {\r\n\t\t\tawait props.db.records.where('uid').equals(uid).delete()\r\n\r\n\t\t\tupdateRecords()\r\n\t\t}\r\n\t}\r\n\r\n\tasync function exportAndDownloadCSV() {\r\n\t\tawait setLoading(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\texportCSV(\r\n\t\t\t\tprops.codebook,\r\n\t\t\t\tstate.records.filter((d) => d)\r\n\t\t\t)\r\n\t\t\t\t.then((exportCSVResults) =>\r\n\t\t\t\t\tdownload(exportCSVResults, `${props.config.table}.csv`)\r\n\t\t\t\t)\r\n\t\t\t\t.catch((err) => console.error(`there was an Error: ${err}`))\r\n\t\t}, 100)\r\n\t\t// Hack to turn off loading state/spinner after 1.5s\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoading(false)\r\n\t\t}, 1500)\r\n\t}\r\n\r\n\tfunction setLoading(value) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tresolve(setIsLoading(value))\r\n\t\t})\r\n\t}\r\n\r\n\tfunction changeSearchText(e) {\r\n\t\tsetState({ ...state, search: e.target.value, page: 0 })\r\n\t}\r\n\r\n\tfunction clearSearchText() {\r\n\t\tsetState({ ...state, search: '', page: 0 })\r\n\t}\r\n\r\n\tfunction onSearchFieldChanged(e) {\r\n\t\tsetState({ ...state, searchField: e.target.value, page: 0 })\r\n\t}\r\n\r\n\tfunction onSortFieldChanged(e) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOCALSTORAGE_STATE_UPDATE',\r\n\t\t\tpayload: e.target.value,\r\n\t\t\tfield: 'sortField',\r\n\t\t})\r\n\t\t// setState({ ...state, sortField: e.target.value, page: 0 })\r\n\t}\r\n\r\n\tfunction onSortOrderChanged(e) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOCALSTORAGE_STATE_UPDATE',\r\n\t\t\tpayload: e.target.checked ? -1 : 1,\r\n\t\t\tfield: 'sortOrder',\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onIncludeUnknownChanged(e) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOCALSTORAGE_STATE_UPDATE',\r\n\t\t\tpayload: e.target.checked,\r\n\t\t\tfield: 'includeUnknown',\r\n\t\t})\r\n\t}\r\n\tfunction onIncludeLockedChanged(e) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOCALSTORAGE_STATE_UPDATE',\r\n\t\t\tpayload: e.target.checked,\r\n\t\t\tfield: 'includeLocked',\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onExactMatchChanged(e) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOCALSTORAGE_STATE_UPDATE',\r\n\t\t\tpayload: e.target.checked,\r\n\t\t\tfield: 'exactMatch',\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onPageChange(page) {\r\n\t\tdebugger\r\n\t\tsetState({ ...state, page: parseInt(page) })\r\n\t\t// dispatch({\r\n\t\t// \ttype: 'PAGE_UPDATE',\r\n\t\t// \tpayload: parseInt(page),\r\n\t\t// \tfield: 'page',\r\n\t\t// })\r\n\t}\r\n\r\n\tasync function cleanUpInvalidRecords(silent = false) {\r\n\t\t// Removes records that are not valid from database\r\n\t\t// Find invalid records\r\n\t\tsetLoading(true)\r\n\t\tlet records = [...state.records]\r\n\t\tlet toDelete = []\r\n\r\n\t\tfor (let record of records) {\r\n\t\t\tlet validation = validateRecord(record, props.codebook)\r\n\t\t\tif (record.locked !== 'TRUE' && !isValid(validation))\r\n\t\t\t\ttoDelete.push(record.uid)\r\n\t\t}\r\n\r\n\t\tif (toDelete.length === 0) {\r\n\t\t\t// No invalid records were found\r\n\t\t\tif (!silent) alert('No invalid records to delete.')\r\n\t\t} else {\r\n\t\t\t// Found invalid records, if not in silent mode ask to delete them\r\n\t\t\tif (\r\n\t\t\t\tsilent ||\r\n\t\t\t\twindow.confirm('Really delete ' + toDelete.length + ' records?')\r\n\t\t\t) {\r\n\t\t\t\t// Delete from db\r\n\t\t\t\tawait props.db.records\r\n\t\t\t\t\t.where('uid')\r\n\t\t\t\t\t.anyOf(...toDelete)\r\n\t\t\t\t\t.delete()\r\n\r\n\t\t\t\t// Update view of records\r\n\t\t\t\tupdateRecords()\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tlet searchHits = {}\r\n\tlet sortField = ''\r\n\tstate.sortField\r\n\t\t? (sortField = props.codebook.find((d) => d.name === state.sortField))\r\n\t\t: (sortField = 'pid')\r\n\r\n\tuseEffect(() => {\r\n\t\tfilterAndSortRecords()\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [state.records, state.search, state.searchField, sortState])\r\n\r\n\tfunction filterAndSortRecords() {\r\n\t\tlet filteredRecords = state.records\r\n\t\t\t// Filter on search term\r\n\t\t\t.filter((d) => {\r\n\t\t\t\t// If not checked, do not include records that are marked as locked\r\n\t\t\t\tif (!sortState.includeLocked && d.locked !== 'FALSE') return false\r\n\r\n\t\t\t\t// If not checked, do not include records with sortField unknown\r\n\t\t\t\tif (!sortState.includeUnknown) {\r\n\t\t\t\t\tlet value = d[sortState.sortField] || ''\r\n\t\t\t\t\tif (isUnknown(value, sortField)) return false\r\n\t\t\t\t}\r\n\t\t\t\t// Search is empty show all records\r\n\t\t\t\tif (state.search === '') {\r\n\t\t\t\t\tsetSearchResults({})\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet interpolatedRaw = interpolateRecord(d, props.codebook)\r\n\t\t\t\tlet interpolated = {}\r\n\t\t\t\tfor (let f of props.codebook)\r\n\t\t\t\t\tinterpolated[f.name] = (interpolatedRaw[f.name] || '').toString()\r\n\r\n\t\t\t\tconst keys = props.codebook\r\n\t\t\t\t\t.map((d) => d.name)\r\n\t\t\t\t\t// If there is a searchField selected, use only keys matching it\r\n\t\t\t\t\t.filter((d) => state.searchField === '' || d === state.searchField)\r\n\t\t\t\tlet hit = false\r\n\t\t\t\tlet hits = []\r\n\r\n\t\t\t\tfor (let k of keys) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tinterpolated.hasOwnProperty(k) &&\r\n\t\t\t\t\t\tinterpolated[k] != null &&\r\n\t\t\t\t\t\t(sortState.exactMatch\r\n\t\t\t\t\t\t\t? interpolated[k].toString().toLowerCase() === state.search.trim()\r\n\t\t\t\t\t\t\t: interpolated[k]\r\n\t\t\t\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t\t.indexOf(state.search) !== -1)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\thit = true\r\n\t\t\t\t\t\tconst field = props.codebook.find((d) => d.name === k)\r\n\t\t\t\t\t\tif (field)\r\n\t\t\t\t\t\t\t// Sometimes fields do not exist in codebook\r\n\t\t\t\t\t\t\thits.push([field.label, interpolatedRaw[k]])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hit) {\r\n\t\t\t\t\tsearchHits[d.uid] = hits\r\n\t\t\t\t\tsetSearchResults({ ...searchHits })\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false\r\n\t\t\t})\r\n\t\t\t.sort((a, b) => {\r\n\t\t\t\t// Handle quantitative values with parseInt\r\n\t\t\t\tif (sortState.sortFieldType === 'quantitative') {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t(parseInt(a[sortState.sortField]) -\r\n\t\t\t\t\t\t\tparseInt(b[sortState.sortField])) *\r\n\t\t\t\t\t\t-sortState.sortOrder\r\n\t\t\t\t\t)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Handle other values as strings\r\n\t\t\t\t\tif (a[sortState.sortField] > b[sortState.sortField])\r\n\t\t\t\t\t\treturn -sortState.sortOrder\r\n\t\t\t\t\telse if (a[sortState.sortField] === b[sortState.sortField]) return 0\r\n\t\t\t\t\treturn sortState.sortOrder\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn setFilteredRecordsState([...filteredRecords])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{`${props.config.name} - Records`}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<h2>\r\n\t\t\t\tPick record{' '}\r\n\t\t\t\t{`(${filteredRecordsState.length} / ${state.records.length})`}\r\n\t\t\t</h2>\r\n\r\n\t\t\t<ButtonContiner\r\n\t\t\t\tcreateRecord={createRecord}\r\n\t\t\t\tcleanUpInvalidRecords={cleanUpInvalidRecords}\r\n\t\t\t\texportAndDownloadCSV={exportAndDownloadCSV}\r\n\t\t\t\tsetLoading={setLoading}\r\n\t\t\t\tupdateRecords={updateRecords}\r\n\t\t\t\tdb={props.db}\r\n\t\t\t\tisLoading={isLoading}\r\n\t\t\t/>\r\n\r\n\t\t\t<SearchRecords\r\n\t\t\t\tchangeSearchText={changeSearchText}\r\n\t\t\t\tonSearchFieldChanged={onSearchFieldChanged}\r\n\t\t\t\tcodebook={state.codebook}\r\n\t\t\t\tclearSearchText={clearSearchText}\r\n\t\t\t\tsearch={state.search}\r\n\t\t\t\tsearchField={state.searchField}\r\n\t\t\t/>\r\n\t\t\t<SortContainer\r\n\t\t\t\tpageSize={state.pageSize}\r\n\t\t\t\tstatePage={state.page}\r\n\t\t\t\tfilteredRecords={filteredRecordsState}\r\n\t\t\t\tonPageChange={onPageChange}\r\n\t\t\t\tsortOrder={sortState.sortOrder}\r\n\t\t\t\texactMatch={sortState.exactMatch}\r\n\t\t\t\tincludeUnknown={sortState.includeUnknown}\r\n\t\t\t\tincludeLocked={sortState.includeLocked}\r\n\t\t\t\tsortField={sortState.sortField}\r\n\t\t\t\tonSortFieldChanged={onSortFieldChanged}\r\n\t\t\t\tonSortOrderChanged={onSortOrderChanged}\r\n\t\t\t\tcodebook={props.codebook}\r\n\t\t\t\tonIncludeUnknownChanged={onIncludeUnknownChanged}\r\n\t\t\t\tonIncludeLockedChanged={onIncludeLockedChanged}\r\n\t\t\t\tonExactMatchChanged={onExactMatchChanged}\r\n\t\t\t/>\r\n\t\t\t<div className=\"list is-hoverable\">\r\n\t\t\t\t{filteredRecordsState ? (\r\n\t\t\t\t\t<RecordsContainer\r\n\t\t\t\t\t\tpageSize={state.pageSize}\r\n\t\t\t\t\t\tpage={state.page}\r\n\t\t\t\t\t\tcodebook={props.codebook}\r\n\t\t\t\t\t\tfilteredRecords={filteredRecordsState}\r\n\t\t\t\t\t\tsearchHits={searchResults}\r\n\t\t\t\t\t\tdeleteRecord={deleteRecord}\r\n\t\t\t\t\t\tsortField={sortState.sortField}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default withRouter(RecordPicker)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport useDarkMode from './Hooks/useDarkMode'\r\n\r\ntype Props = {\r\n\tversion: string,\r\n\tname: string\r\n}\r\n\r\nfunction Nav({ name, version }: Props) {\r\n\tconst { theme, toggleTheme, componentMounted } = useDarkMode()\r\n\r\n\tconst ThemeButton = () => {\r\n\t\treturn theme === 'light' ? (\r\n\t\t\t<div style={{paddingLeft:'1rem'}} >\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button is-primary is-active\"\r\n\t\t\t\tonClick={toggleTheme}\r\n\t\t\t\t>\r\n\t\t\t\t{'🌘'}\r\n\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div style={{paddingLeft:'1rem'}} >\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button is-primary is-active\"\r\n\t\t\t\tonClick={toggleTheme}\r\n\t\t\t\t>\r\n\t\t\t\t{'🌖'}\r\n\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{componentMounted ? (\r\n\t\t\t\t<nav className=\"navigation-bar\">\r\n\t\t\t\t\t<div className=\"navigation-bar-contatiner\">\r\n\t\t\t\t\t\t<div className=\"navigation-bar-brand\">{name}</div>\r\n\t\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t\t<button  className=\"button is-primary is-active\">\r\n\t\t\t\t\t\t\t\tRecords\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<ThemeButton />\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"navigation-bar-version\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/tracits/rodant/blob/master/CHANGELOG.md\">\r\n\t\t\t\t\t\t\tBuilt with Rodant (v.{version})\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Nav\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport default function useDarkMode() {\r\n\tconst [theme, setTheme] = useState('light')\r\n\tconst [componentMounted, setComponentMounted] = useState(false)\r\n\r\n\tconst setMode = (mode) => {\r\n\t\twindow.localStorage.setItem('theme', mode)\r\n\t\tsetTheme(mode)\r\n\t}\r\n\r\n\tconst toggleTheme = () => {\r\n\t\ttheme === 'light' ? setMode('dark') : setMode('light')\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// manually setting the button classes that are controlled by the css framework\r\n\t\tif (theme === 'dark' && componentMounted) {\r\n\t\t\tdocument.querySelector('body').setAttribute('class', 'dark-theme')\r\n\t\t\tdocument.querySelectorAll('button').forEach((element) => {\r\n\t\t\t\telement.className.includes('button ') &&\r\n\t\t\t\t\telement.setAttribute('class', 'button  is-dark')\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdocument.querySelector('body').setAttribute('class', 'light-theme')\r\n\t\t\tdocument.querySelectorAll('button').forEach((element) => {\r\n\t\t\t\telement.className.includes('button ') &&\r\n\t\t\t\t\telement.setAttribute('class', 'button ')\r\n\t\t\t})\r\n\t\t}\r\n\t}, [theme, componentMounted])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst localTheme = window.localStorage.getItem('theme')\r\n\r\n\t\twindow.matchMedia &&\r\n\t\twindow.matchMedia('(prefers-color-scheme: dark)').matches &&\r\n\t\t!localTheme\r\n\t\t\t? setMode('dark')\r\n\t\t\t: localTheme\r\n\t\t\t? setTheme(localTheme)\r\n\t\t\t: setMode('light')\r\n\t\tsetComponentMounted(true)\r\n\t}, [])\r\n\r\n\treturn { theme, toggleTheme, componentMounted }\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport 'bulma/css/bulma.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport './App.css'\r\nimport RecordEditor from './components/RecordEditor'\r\nimport RecordPicker from './components/RecordPicker'\r\nimport packagejson from '../package.json'\r\nimport Nav from './components/Nav'\r\n\r\n/**\r\n * Container for the application.\r\n * Uses react-router to select what page to show.\r\n */\r\nfunction App({ db, codebook, config }) {\r\n\t// Create component factories for the routes below\r\n\tlet recordPicker = () => (\r\n\t\t<RecordPicker db={db} codebook={codebook} config={config} />\r\n\t)\r\n\tlet recordEditor = (match) => (\r\n\t\t<RecordEditor\r\n\t\t\tdb={db}\r\n\t\t\tcodebook={codebook}\r\n\t\t\tuid={match.match.params.uid}\r\n\t\t\tconfig={config}\r\n\t\t/>\r\n\t)\r\n\tlet doubleEntry = (match) => (\r\n\t\t<RecordEditor\r\n\t\t\tdb={db}\r\n\t\t\tcodebook={codebook}\r\n\t\t\tuid={match.match.params.uid}\r\n\t\t\tdouble-entry=\"true\"\r\n\t\t\tconfig={config}\r\n\t\t/>\r\n\t)\r\n\r\n\t// Use React Router to select which page to show from the url\r\n\treturn (\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<Nav name={config.name} version={packagejson.version} />\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Route path=\"/\" exact component={recordPicker} />\r\n\t\t\t\t<Route path=\"/record/:uid\" component={recordEditor} />\r\n\t\t\t\t<Route path=\"/complete/:uid\" component={doubleEntry} />\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n)\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type')\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister()\r\n\t\t})\r\n\t}\r\n}\r\n","// Populates the 'directDependencies' array for a field\r\nfunction getDirectDeps(field, find, visited = []) {\r\n\t// Check visited\r\n\tif (visited.indexOf(field) !== -1) return []\r\n\r\n\t// Add field to the visited fields\r\n\tvisited.push(field)\r\n\r\n\tlet findVarRegex = /([a-z_]+[0-9]*)/g\r\n\tvar mentioned = {}\r\n\r\n\t// Add calculated fields\r\n\tif (field.calculated === 'yes')\r\n\t\tfield.equation.match(findVarRegex).forEach((d) => (mentioned[d] = find(d)))\r\n\r\n\t// Add logic checks\r\n\tif (field.logic_checks)\r\n\t\tfield.logic_checks\r\n\t\t\t.match(findVarRegex)\r\n\t\t\t.forEach((d) => (mentioned[d] = find(d)))\r\n\r\n\treturn Object.values(mentioned)\r\n}\r\n\r\n// Gets all dependencies recursively on a codebook.\r\n// Only works where getDirectDeps has been used to populate directDependencies\r\nfunction getDepsRecursive(field, visited = []) {\r\n\tif (visited.indexOf(field) !== -1) return\r\n\r\n\tvisited.push(field)\r\n\tfor (let dep of field.directDependencies) getDepsRecursive(dep, visited)\r\n\r\n\treturn visited\r\n}\r\n\r\n// Converts a parsed csv codebook to internal format\r\n// Also calculate field dependencies\r\nfunction csvToCodebook(csv) {\r\n\tlet columns = csv[0]\r\n\tlet codebook = []\r\n\r\n\t// Create items\r\n\tfor (let i = 1; i < csv.length; i++) {\r\n\t\tlet o = {}\r\n\t\tfor (let j = 0; j < columns.length; j++) o[columns[j]] = csv[i][j]\r\n\r\n\t\tcodebook.push(o)\r\n\t}\r\n\r\n\tfor (let field of codebook)\r\n\t\tfield.directDependencies = getDirectDeps(field, (e) =>\r\n\t\t\tcodebook.find((d) => d.name === e)\r\n\t\t)\r\n\r\n\tfor (let field of codebook) field.dependencies = getDepsRecursive(field)\r\n\r\n\treturn codebook\r\n}\r\n\r\nexport { csvToCodebook }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport csv from 'async-csv'\r\nimport dexie from 'dexie'\r\nimport { csvToCodebook } from './functions/codebook'\r\n\r\n// Start service worker\r\nserviceWorker.register()\r\n\r\nconst DB_VERSION = 1\r\nasync function bootstrap() {\r\n\t// Load config\r\n\tlet configRequest = await fetch(`${process.env.PUBLIC_URL}/config.json`)\r\n\tlet config = await configRequest.json()\r\n\r\n\t// Parse codebook into javascript object\r\n\tlet response = await fetch(`${process.env.PUBLIC_URL}/${config.codebook}`)\r\n\tlet codebook = await response.text()\r\n\tlet csvString = await csv.parse(codebook)\r\n\tlet items = csvToCodebook(csvString)\r\n\r\n\t// Initialize Dexie database\r\n\tlet db = new dexie(config.table)\r\n\tlet desc = '++uid, locked, ' + items.map((d) => d.name).join(', ')\r\n\tlet store = {\r\n\t\trecords: desc,\r\n\t}\r\n\r\n\tdb.version(DB_VERSION).stores(store)\r\n\r\n\t// Bootstrap the 'App'\r\n\tReactDOM.render(\r\n\t\t<App codebook={items} db={db} config={config} />,\r\n\t\tdocument.getElementById('root')\r\n\t)\r\n\r\n\t// For prefetch of ICD data\r\n\tawait import('./data/icd10.json')\r\n}\r\n\r\nbootstrap()\r\n"],"sourceRoot":""}